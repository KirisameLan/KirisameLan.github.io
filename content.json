[{"title":"mapreduce-first-attempt","path":"2021/11/16/mapreduce-first-attempt/","text":"一次Hadoop Mapreduce作业的完成过程 应该是第一次正儿八经地接触与大数据相关的东西，好多名词都看不明白。 记录一下我完成这次作业时的思考。 待写"},{"title":"Hexo | 记录一下建立这个博客的过程","path":"2021/11/07/blog-construction/","text":"历时13天，本博客终于基本施工完成了。博客的第一篇文就简单记录一下对前端零了解的我瞎折腾的过程。 基础功能说说/artitalk.js起初看到一个typecho博主实现了这个功能，不过似乎是通过微信公众号发布说说，然后将内容嵌入的博客中。稍微搜索了一下没有找到相关的教程，而且好像整微信公众号什么的似乎也很麻烦，就放弃了这个想法。 经过一小段时间的搜索，我发现Artitalk.js就很符合我的需求。 Artitalk.js是基于 LeanCloud 实现的可实时发布说说/微语的 js 增删查改全方面支持 支持针对每条说说的评论 支持 Markdown/html 语法 支持图片上传 使用也很简单，注册一个LeanCloud国际版账号，按照使用说明的教程进行配置。然后新建一个post，直接在其中添加 12345678&lt;script type=&quot;text/javascript&quot; src=&quot;https://unpkg.com/artitalk&quot;&gt;&lt;/script&gt;&lt;div id=&quot;artitalk_main&quot;&gt;&lt;/div&gt;&lt;script&gt;new Artitalk(&#123; appId: &#x27;&#x27;, // Your LeanCloud appId appKey: &#x27;&#x27; // Your LeanCloud appKey&#125;)&lt;/script&gt; 发布界面后就可以看到配置成功的提示了。 一个小问题：加载动画与说说容器上方的内容有重叠后面将content容器的背景改为半透明时，发现加载动画背景有白块，很丑，于是干脆把加载动画关掉了 不怎么会用typora，本想着用空格什么的占位符让加载动画和上方的分割线空出些距离，但这样会产生一部分能选中的文本，本强迫症无法接受，于是怒打开ps，做了一个细长的全透明图片，插在分割线和说说容器之间。 虽然稍微有些蠢，但不也挺好的吗（ 加载动画：没注意大小啊在把content容器的背景改为半透明之后，输入框里的新科娘的白色背景十分刺眼。找了张ほし老师的Q版画，抠图，传图床，看实际效果的时候发现图好大（ 于是去github删掉图片，ps里调整大小和位置，又重新上传了一下，但是cdn的刷新有延迟，搜了一下刷新Jsdelivr缓存的方法，发现竟然还真有！ 把Jsdelivr链接中的cdn替换成purge 但即便刷新之后还是有大概10min的延迟，我就进行了3次处理上传-&gt;等待刷新-&gt;查看效果发现大小不行-&gt;处理上传的循环（ 反应过来以后我觉得我就是个啥宝，f12找出加载图的资源地址，直接查看这张图的大小不就行了吗（ 评论功能/valine-&gt;disqus-&gt;disqusjs一开始使用valine一是因为感觉用valine的真的很多，而且用起来很方便，只需要在LeanCloud中再建一个应用给评论就行。但是看valine的帮助文档的时候，发现真的有好多问题，不兼容pjax、自带的邮件提醒下线、第三方的邮件提醒的配置我看不懂（…… 后来看到别人博客的disqus，感觉不错于是我也换了disqus，注册了一个账号，修改了一下主题配置，感觉良好，还支持邮件提醒。但是！当我不科学上网时，发现评论区根本加载不出来（，这时候才发现原来disqus被墙了。 接着改用disqusjs，惊喜地发现在使用文档里有这么一句： DisqusJS v1.2.6 开始支持检测是否存在 Disqus 实例，并在加载 Disqus 时直接调用 DISQUS.reset() 方法重载 Disqus 评论，无需用户手动销毁现有的 Disqus 实例。 虽然不是很明白，但感觉应该就是不用根据pjax调整了吧（ 听说disqus是有广告的，但这都1202了，不会还有人没有adblock吧（ 美化与优化live2d看板娘起初参考的这篇文章:Hexo 博客优化之博客美化系列（持续更新） 虽然使用很简单但仅有一个冻鳗人物实在是没什么意思，翻了一会翻到了就发现了这个，支持换人换装和对话框。使用文档说的很多，我也看不太懂。就在layout中加了一句 1&lt;script src=&quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js&quot;&gt;&lt;/script&gt; 生成网页后有效果了，我就暂时搁置了。 但在整完pjax后，我发现我可以大致看懂使用文档了。 initWidget 方法接受名为 apiPath 和 cdnPath 的参数，两者设置其中一项即可。其中 apiPath 为后端 API 的 URL，可以自行搭建，并增加模型。 我找到了默认的后端api仓库，然后查看其fork列表，发现这个仓库被第二次fork的次数最多，于是我也fork了一下这个仓库，改了一点参数并删除了我不想要的模型，达成想要实现的效果了！ 音乐播放器耗时最长的东西其一。 初次接触时看着什么APlayer,Meting,hexo-tag-aplayer一头雾水，理不清谁是谁，有什么区别。甚至看不出他们的使用方法里写的是什么语言（ 所幸搜到了这篇博文，这我不就明白了吗（， 123456&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css&quot;&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js&quot;&gt;&lt;/script&gt;&lt;div id=&quot;my-aplayer&quot; class=&quot;aplayer&quot; &gt;&lt;/div&gt; 为其他配置项赋好值以后，把这段html代码加到页面中，成功得到一个在右侧顶端的音乐播放器。至少我用的nexmoe主题是这样 播放列表无法展开！怎么点播放列表也没反应啊，没有办法。我的第一个想法是通过自定义修改css和js文件把列表那个按钮给去掉！但是我当时还不知道怎么处理不在本地的css后来才知道可以下载后放在source文件夹中在把href值改成绝对路径，而且这个css的排版也乱的不行毫无可读性可以在页面f12找到对应按钮的css标签然后在本地搜索（。 于是我开始猜想打不开列表的原因。首先我想到我并没有调整css给播放器在页面上安排一个位置大概，但是播放器确如我所愿在content容器之上，那有没有一种可能是容器的大小被设定成了播放器的大小，列表展开后处在容器之外呢？ 打开f12，确实验证了我这个想法。 上网搜索css如何自适应高度，得到的方法是在style中设置display值为’table’，完美解决。 切换界面音乐就停了一开始让我用pjax我是拒绝的，因为其使用文档我一丁点也看不明白（ 在使用pjax之前，没刷新一次界面，看板娘也会跟着刷新一遍，我不以为意。但在整好音乐播放器以后这个问题就没法忽视了，这一切换页面音乐就停了也太蠢了。 于是被迫看懂看不懂的东西，耗时最长的东西其二就来了。 pjax pjax是基于ajax+pushState的新技术，该技术可以无刷新改变页面的内容，并且可以改变页面的URL。 初次尝试pjax时，按照其他博主的教程用npm安装，引入js，照猫画虎地写了一段（应该是php?）代码。但测试发现并没有任何效果。 1$(document).pjax(&#x27;a&#x27;, &#x27;#pjax-container&#x27;) 经过不懈的瞎努力尝试，终于明白这个容器参数前的’#’或’.’是有具体含义的。仔细阅读pjax的Usage后，了解到这就是css selector。 .x就是选择class值为x的元素 #y就是选择所有id值为y的元素 更改代码后终于成功实现了无刷新改变界面，但是此时出现了一个新问题。 pjax只支持刷新一个容器？？点击左侧的按钮，右侧的内容容器确实在无刷新改变。但是左侧的按钮，它状态不变了！！翻遍pjax的说明文档似乎并没有说如何刷新两个容器，百度无果，谷歌用英语终于搜到了答案：pjax不支持刷新两个容器！ 无奈，新建了一个标签将左侧和右侧，也就是header与content全部包裹在一起，这样的话每次启用pjax都会刷新按钮状态了。 jQuery过时了？在很多博主的文章里都能看到他们因为jQuery的原因舍弃了pjax，不过我在某一篇文章的评论区中看到有人说有大佬做出了不需要jQuery的pjax？ 正好当时在用的jQuery-pjax不知道为何一添加NProgress之类的就会彻底失效。抱着试试看的态度我删除了原来的pjax使用了MoOx/pjax。结果真的是超乎我的意料，不仅切换界面的流畅度大大提升，能够使用NProgress，支持多容器刷新，并且原来在一个界面停留时间过长pjax会失效的bug，以及窗口大小低时header部分会抽风的bug也解决了。唯一无伤大雅的缺点是网址上会多一个时间戳（ 还有一个bug（看到左侧的搜索栏了吗，这个搜索会重新刷新整个界面，暂时我还没找到解决方法捏（ 要不干脆改成站外搜索吧（ 动画特效/animate.css起初我看到一个搜图网站的加载动画做得非常好看，于是我就想偷借过来用一下（ f12打开控制台，只看见无数的js，我全部复制下来引用到自己的layout文件中，copy了看起来相关的css和html代码。最后发现这个加载动画，它停不下来啊！ 折腾了半天无果现在已经实现了阉割版，在我删掉引入的乱七八糟的js时我看见了这样一个名字的css：animate.min.css。 了解后发现网页的很多简单特效都可以用这个轻易完成。这里有动画效果演示。引入css后只需要在想要添加动画效果的容器的class中加上实例中的动画名称就可以了。 其他解决了一个又一个问题，我初步对css、js和html有了一丁点了解。在能够熟练地瞎改css后，我也成功将界面改成圆角并做成了蓝色半透明的感觉！ 本文完成时博客的界面： 在实现我的预期功能时，因个人能力原因妥协了很多，最终成品也是有很多不足，但我也十分满意了，在胡乱折腾的过程中也十分开心，希望以后我可以做得更好吧。"}]